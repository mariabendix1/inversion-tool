(VAR ys xs l x res1 res2 y n ps bool zs bool1 bool2)
(RULES
  encode(ys) -> <xs> <= compr(ys, []) -> <xs>

  compr([], l) -> <l>
  compr(:(x,xs), []) -> <res1>
    <= compr(xs, :(p(x, s(0)), [])) -> <res1>
  compr(:(x, xs), :(p(y, n), ps)) -> <res1>
    <= equal(y, x) -> <false> ^
       compr(xs, :(p(x, s(0)),:(p(y,n), ps))) -> <res1>
  compr(:(x, xs), :(p(x, n), ps)) -> <res1>
    <= equal(x, x) -> <true> ^
       compr(xs, :(p(x, s(n)), ps)) -> <res1>

  equal(a,a) -> <true>
  equal(s(x),a) -> <false>
  equal(a,s(x)) -> <false>
  equal(s(x),s(y)) -> <bool> <= equal(x,y) -> <bool>
     
)
(COMMENT
  submitted by:  Maria Bendix Mikkelsen
  author:        [1]
 
  description:   runlength encoder

  properties of the system:
    non-left-linear, erasing
    non-functional - there is an overlap between x and y (rules 3 and
                     4) because equality/inequality has not yet been
                     asserted
    non-reversible because of output overlap + erasing

  [1] A. Zaki, S. Abdennadher, and T. Fr ̈uhwirth, “Combining forward 
      and backward propagation,” in Frontiers of Combining 
      Systems (C. Lutz andS. Ranise, eds.), (Cham), pp. 307–322, 
      Springer International Publishing,2015
)
